#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
const REQUIRED_ENV_VARS = [
  'NEXT_PUBLIC_SUPABASE_URL',
  'NEXT_PUBLIC_SUPABASE_ANON_KEY', 
  'SUPABASE_SERVICE_ROLE_KEY',
  'ADMIN_USERNAME',
  'ADMIN_PASSWORD',
];

// –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ, –Ω–æ –≤–∞–∂–Ω—ã–µ
const OPTIONAL_ENV_VARS = [
  'NEXT_PUBLIC_VAPID_PUBLIC_KEY',
  'VAPID_PRIVATE_KEY',
  'TELEGRAM_BOT_TOKEN',
  'VK_API_TOKEN',
  'YOOKASSA_SHOP_ID',
  'YOOKASSA_SECRET_KEY',
  'YANDEXGPT_API_KEY',
  'OPENAI_API_KEY',
];

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è KattyFit...\n');

let hasErrors = false;
const missing = [];
const optional = [];

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
REQUIRED_ENV_VARS.forEach(varName => {
  if (!process.env[varName]) {
    hasErrors = true;
    missing.push(varName);
    console.log(`‚ùå ${varName} - –û–¢–°–£–¢–°–¢–í–£–ï–¢ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è)`);
  } else {
    console.log(`‚úÖ ${varName} - —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞`);
  }
});

console.log('\nüìã –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
OPTIONAL_ENV_VARS.forEach(varName => {
  if (!process.env[varName]) {
    optional.push(varName);
    console.log(`‚ö†Ô∏è  ${varName} - –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)`);
  } else {
    console.log(`‚úÖ ${varName} - —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞`);
  }
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ AI —Å–µ—Ä–≤–∏—Å–∞
const hasAI = process.env.YANDEXGPT_API_KEY || process.env.OPENAI_API_KEY;
if (!hasAI) {
  console.log('\n‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∏ –æ–¥–∏–Ω AI —Å–µ—Ä–≤–∏—Å (YandexGPT –∏–ª–∏ OpenAI)');
  console.log('   –ß–∞—Ç-–±–æ—Ç –Ω–µ —Å–º–æ–∂–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã');
}

// –ò—Ç–æ–≥–∏
console.log('\nüìä –ò—Ç–æ–≥–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏:\n');

if (hasErrors) {
  console.log(`‚ùå –ù–∞–π–¥–µ–Ω–æ ${missing.length} –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–• –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö`);
  console.log('   –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ù–ï –ë–£–î–ï–¢ —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
  console.log('\nüîß –ß—Ç–æ –¥–µ–ª–∞—Ç—å:');
  console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –≤ v0');
  console.log('2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª Environment Variables');
  console.log('3. –î–æ–±–∞–≤—å—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env.example');
  console.log('4. –°–º. –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –≤ V0_ENV_SETUP.md');
  process.exit(1);
} else {
  console.log('‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!');
  
  if (optional.length > 0) {
    console.log(`\n‚ö†Ô∏è  ${optional.length} –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ`);
    console.log('   –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã');
  } else {
    console.log('‚úÖ –í—Å–µ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–∞–∫–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!');
  }
  
  console.log('\nüöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!');
}

// –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è v0
const status = {
  checked: new Date().toISOString(),
  required: {
    total: REQUIRED_ENV_VARS.length,
    missing: missing.length,
    vars: missing
  },
  optional: {
    total: OPTIONAL_ENV_VARS.length,
    missing: optional.length,
    vars: optional
  },
  ready: !hasErrors
};

fs.writeFileSync(
  path.join(process.cwd(), '.env-check-status.json'),
  JSON.stringify(status, null, 2)
);